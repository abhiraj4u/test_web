{"filter":false,"title":"user.rb","tooltip":"/app/models/user.rb","undoManager":{"mark":55,"position":55,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":31},"end":{"row":1,"column":0},"action":"insert","lines":["",""]},{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":4},"end":{"row":1,"column":35},"action":"insert","lines":["validates :name, presence: true"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":35},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":4},"end":{"row":2,"column":36},"action":"insert","lines":["validates :email, presence: true"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":4},"end":{"row":2,"column":36},"action":"remove","lines":["validates :name, presence: true","    validates :email, presence: true"]},{"start":{"row":1,"column":4},"end":{"row":5,"column":0},"action":"insert","lines":["validates :name,  presence: true, length: { maximum: 50 }","  VALID_EMAIL_REGEX = /\\A[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+\\z/i","  validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX }",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"remove","lines":["    "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":2,"column":2},"action":"remove","lines":["  "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":0},"end":{"row":3,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":4},"end":{"row":4,"column":55},"action":"remove","lines":["validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX }"]},{"start":{"row":3,"column":4},"end":{"row":6,"column":0},"action":"insert","lines":["validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX },","                    uniqueness: true",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":4},"end":{"row":5,"column":36},"action":"remove","lines":["validates :name,  presence: true, length: { maximum: 50 }","    VALID_EMAIL_REGEX = /\\A[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+\\z/i","    validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX },","                    uniqueness: true"]},{"start":{"row":1,"column":4},"end":{"row":6,"column":57},"action":"insert","lines":["before_save { self.email = email.downcase }","  validates :name,  presence: true, length: { maximum: 50 }","  VALID_EMAIL_REGEX = /\\A[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+\\z/i","  validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX },","                    uniqueness: { case_sensitive: false }"]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":57},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":7,"column":20},"action":"insert","lines":["                    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":16},"end":{"row":7,"column":20},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":12},"end":{"row":7,"column":16},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":8},"end":{"row":7,"column":12},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":4},"end":{"row":7,"column":8},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"remove","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":7,"column":4},"end":{"row":9,"column":0},"action":"insert","lines":["has_secure_password","  validates :password, length: { minimum: 6 }",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":2},"end":{"row":3,"column":3},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":3,"column":3},"end":{"row":3,"column":4},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":2},"end":{"row":8,"column":3},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":3},"end":{"row":8,"column":4},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":8,"column":47},"end":{"row":9,"column":0},"action":"insert","lines":["",""]},{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":9,"column":4},"end":{"row":10,"column":0},"action":"insert","lines":["",""]},{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":4},"end":{"row":15,"column":5},"action":"insert","lines":["# Returns the hash digest of the given string.","  def User.digest(string)","    cost = ActiveModel::SecurePassword.min_cost ? BCrypt::Engine::MIN_COST :","                                                  BCrypt::Engine.cost","    BCrypt::Password.create(string, cost: cost)","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"remove","lines":["    "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":2},"action":"remove","lines":["  "]},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"remove","lines":["    "]},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"remove","lines":["    "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"remove","lines":["    "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":10,"column":0},"end":{"row":10,"column":4},"action":"insert","lines":["    "]},{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "]},{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "]},{"start":{"row":13,"column":0},"end":{"row":13,"column":4},"action":"insert","lines":["    "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":4},"action":"insert","lines":["    "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":15,"column":7},"end":{"row":16,"column":0},"action":"insert","lines":["",""]},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":16,"column":4},"end":{"row":17,"column":0},"action":"insert","lines":["",""]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":4},"end":{"row":20,"column":5},"action":"insert","lines":["# Returns a random token.","  def User.new_token","    SecureRandom.urlsafe_base64","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"remove","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":2},"action":"remove","lines":["  "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"remove","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]},{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "]},{"start":{"row":20,"column":0},"end":{"row":20,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":31},"end":{"row":1,"column":0},"action":"insert","lines":["",""]},{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":4},"end":{"row":1,"column":33},"action":"insert","lines":["attr_accessor :remember_token"]}]}],[{"group":"doc","deltas":[{"start":{"row":21,"column":7},"end":{"row":22,"column":0},"action":"insert","lines":["",""]},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":22,"column":4},"end":{"row":23,"column":0},"action":"insert","lines":["",""]},{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":4},"end":{"row":27,"column":5},"action":"insert","lines":["# Remembers a user in the database for use in persistent sessions.","  def remember","    self.remember_token = User.new_token","    update_attribute(:remember_digest, User.digest(remember_token))","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"remove","lines":["    "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":2},"action":"remove","lines":["  "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"remove","lines":["    "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"remove","lines":["    "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":23,"column":0},"end":{"row":23,"column":4},"action":"insert","lines":["    "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":4},"action":"insert","lines":["    "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":4},"action":"insert","lines":["    "]},{"start":{"row":26,"column":0},"end":{"row":26,"column":4},"action":"insert","lines":["    "]},{"start":{"row":27,"column":0},"end":{"row":27,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":27,"column":7},"end":{"row":28,"column":0},"action":"insert","lines":["",""]},{"start":{"row":28,"column":0},"end":{"row":28,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":28,"column":4},"end":{"row":29,"column":0},"action":"insert","lines":["",""]},{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":4},"end":{"row":32,"column":5},"action":"insert","lines":["# Returns true if the given token matches the digest.","  def authenticated?(remember_token)","    BCrypt::Password.new(remember_digest).is_password?(remember_token)","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"remove","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":2},"action":"remove","lines":["  "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"remove","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":2},"action":"remove","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":29,"column":0},"end":{"row":29,"column":4},"action":"insert","lines":["    "]},{"start":{"row":30,"column":0},"end":{"row":30,"column":4},"action":"insert","lines":["    "]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]},{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":37,"column":0},"action":"remove","lines":["class User < ActiveRecord::Base","    attr_accessor :remember_token","    before_save { self.email = email.downcase }","    validates :name,  presence: true, length: { maximum: 50 }","    VALID_EMAIL_REGEX = /\\A[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+\\z/i","    validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX },","                    uniqueness: { case_sensitive: false }","    has_secure_password","    validates :password, length: { minimum: 6 }","    ","    # Returns the hash digest of the given string.","    def User.digest(string)","    cost = ActiveModel::SecurePassword.min_cost ? BCrypt::Engine::MIN_COST :","                                                  BCrypt::Engine.cost","    BCrypt::Password.create(string, cost: cost)","    end","    ","    # Returns a random token.","    def User.new_token","    SecureRandom.urlsafe_base64","    end","    ","    # Remembers a user in the database for use in persistent sessions.","    def remember","    self.remember_token = User.new_token","    update_attribute(:remember_digest, User.digest(remember_token))","    end","    ","    # Returns true if the given token matches the digest.","    def authenticated?(remember_token)","    BCrypt::Password.new(remember_digest).is_password?(remember_token)","    end","","","","end",""]},{"start":{"row":0,"column":0},"end":{"row":33,"column":3},"action":"insert","lines":["class User < ActiveRecord::Base","  attr_accessor :remember_token","  before_save { self.email = email.downcase }","  validates :name,  presence: true, length: { maximum: 50 }","  VALID_EMAIL_REGEX = /\\A[\\w+\\-.]+@[a-z\\d\\-.]+\\.[a-z]+\\z/i","  validates :email, presence: true, length: { maximum: 255 },","                    format: { with: VALID_EMAIL_REGEX },","                    uniqueness: { case_sensitive: false }","  has_secure_password","  validates :password, length: { minimum: 6 }","","  # Returns the hash digest of the given string.","  def User.digest(string)","    cost = ActiveModel::SecurePassword.min_cost ? BCrypt::Engine::MIN_COST :","                                                  BCrypt::Engine.cost","    BCrypt::Password.create(string, cost: cost)","  end","","  # Returns a random token.","  def User.new_token","    SecureRandom.urlsafe_base64","  end","","  # Remembers a user in the database for use in persistent sessions.","  def remember","    self.remember_token = User.new_token","    update_attribute(:remember_digest, User.digest(remember_token))","  end","","  # Returns true if the given token matches the digest.","  def authenticated?(remember_token)","    BCrypt::Password.new(remember_digest).is_password?(remember_token)","  end","end"]}]}],[{"group":"doc","deltas":[{"start":{"row":32,"column":5},"end":{"row":33,"column":0},"action":"insert","lines":["",""]},{"start":{"row":33,"column":0},"end":{"row":33,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":33,"column":2},"end":{"row":34,"column":0},"action":"insert","lines":["",""]},{"start":{"row":34,"column":0},"end":{"row":34,"column":2},"action":"insert","lines":["  "]}]}],[{"group":"doc","deltas":[{"start":{"row":34,"column":2},"end":{"row":37,"column":5},"action":"insert","lines":["# Forgets a user.","  def forget","    update_attribute(:remember_digest, nil)","  end"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":36},"end":{"row":31,"column":0},"action":"insert","lines":["",""]},{"start":{"row":31,"column":0},"end":{"row":31,"column":4},"action":"insert","lines":["    "]}]}],[{"group":"doc","deltas":[{"start":{"row":31,"column":4},"end":{"row":31,"column":40},"action":"insert","lines":["return false if remember_digest.nil?"]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":31,"column":40},"end":{"row":31,"column":40},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1427977057540,"hash":"e5590d953d44e2a54459f91bef7fc872f022241a"}